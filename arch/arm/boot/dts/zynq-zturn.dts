/*
 *  Copyright (C) 2015 Andrea Merello <adnrea.merello@gmail.com>
 *
 *  Based on zynq-zed.dts which is:
 *  Copyright (C) 2011 - 2014 Xilinx
 *  Copyright (C) 2012 National Instruments Corp.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */
/dts-v1/;
/include/ "zynq-7000.dtsi"

/ {
	model = "Zynq Z-Turn MYIR Board";
	compatible = "xlnx,zynq-7000";

	aliases {
		ethernet0 = &gem0;
		serial0 = &uart1;
		serial1 = &uart0;
	};

	memory {
		device_type = "memory";
		reg = <0x0 0x40000000>;
	};

	chosen {
		bootargs = "console=ttyPS0,115200 earlyprintk root=/dev/mmcblk0p2 rootwait";
	};

	gpio-leds {
		compatible = "gpio-leds";
		led_r {
			label = "led_r";
			gpios = <&gpio0 0x72 0x1>;
			default-state = "off";
			linux,default-trigger = "none";
		};

		led_g {
			label = "led_g";
			gpios = <&gpio0 0x73 0x1>;
			default-state = "off";
			linux,default-trigger = "none";
		};

		led_b {
			label = "led_b";
			gpios = <&gpio0 0x74 0x1>;
			default-state = "off";
			linux,default-trigger = "none";
		};

		usr_led1 {
			label = "usr_led1";
			gpios = <&gpio0 0x0 0x1>;
			default-state = "off";
			linux,default-trigger = "none";
		};

		usr_led2 {
			label = "usr_led2";
			gpios = <&gpio0 0x9 0x1>;
			default-state = "off";
			linux,default-trigger = "none";
		};
	};

	gpio-beep {
		compatible = "gpio-beeper";
		label = "pl-beep";
		gpios = <&gpio0 0x75 0x0>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		#address-cells = <0x1>;
		#size-cells = <0x0>;
		autorepeat;

		button_power_at_0 {
			label = "Power button birt";
			/* EMI050, active low */
			gpios = <&gpio0 0x32 0x1>;
			linux,code = <0x74>;
			gpio-key,wakeup;
			autorepeat;
			/* uncomment the following line to
			 * make the button react only to a
			 * protracted pressure
			 */
			/* debounce-interval = <3000>; */
		};
		
		sw1 {
			label = "sw1";
			gpios = <&gpio0 110 1>;
			linux,code = <103>;
			gpio-key,wakeup;
			autorepeat;
		};
		sw2 {
			label = "sw2";
			gpios = <&gpio0 111 1>;
			linux,code = <104>;
			gpio-key,wakeup;
			autorepeat;
		};
		sw3 {
			label = "sw3";
			gpios = <&gpio0 112 1>;
			linux,code = <105>;
			gpio-key,wakeup;
			autorepeat;
		};
		sw4 {
			label = "sw4";
			gpios = <&gpio0 113 1>;
			linux,code = <106>;
			gpio-key,wakeup;
			autorepeat;
		};
	};
	
	 axi_i2c: i2c@41600000 {
			compatible = "xlnx,axi-iic-1.01.b", "xlnx,xps-iic-2.00.a";
		  reg = <0x41600000 0x10000>;
		  interrupt-parent = <&intc>;
		  interrupts = <0 58 0x4>;
		  clocks = <&clkc 15>;
		  clock-names = "pclk";
	};
	
	audio_clock: audio_clock {
			compatible = "fixed-clock";
			#clock-cells = <0>;
			clock-frequency = <12000000>;
		};
	
	axi_i2s_0: axi-i2s@0x43C20000 {
			compatible = "adi,axi-i2s-1.00.a";
			reg = <0x43C20000 0x1000>;
			dmas = <&dmac_s 1 &dmac_s 2>;
			dma-names = "tx", "rx";
			clocks = <&clkc 15>, <&audio_clock>;
			clock-names = "axi", "ref";

			#sound-dai-cells = <0>;
		};
	
	sii9022a_hdmi_snd {
			compatible = "simple-audio-card";
			simple-audio-card,name = "HDMI monitor";
			simple-audio-card,widgets =
				"Speaker", "Speaker";
			simple-audio-card,routing =
				"Speaker", "TMDS";

			simple-audio-card,dai-link@0 {
				format = "i2s";
				cpu {
					sound-dai = <&axi_i2s_0>;
					frame-master;
					bitclock-master;
				};
				codec {
					sound-dai = <&sii902x>;
				};
			};
		};
		
};


&axi_i2c {
//&i2c0 {
	status = "okay";
//  bus-id = <0x0>;
    clock-frequency = <400000>;
    xlnx,has-interrupt = <0x1>;
	
	#size-cells = <0>;
  #address-cells = <1>;
	    
	sii902x: sii902x@3b {
		      compatible = "sil,sii9022a";
		      reg = <0x3b>;
		      interrupt-parent = <&intc>;
		      interrupts = < 0 29 4 >;
	////		mode_str = "1920x1080";
	////	    	bits-per-pixel = <16>;
			
			#sound-dai-cells = <0>;
			
			ports {
					#address-cells = <1>;
					#size-cells = <0>;

					port@0 {
						reg = <0>;
						adv7511_in: endpoint {
							remote-endpoint = <&axi_hdmi_out>;
						};
					};

					port@1 {
						reg = <1>;
					};
				};		
		  };
	
	
		stlm75@49 {
			status = "okay";
			compatible = "lm75";
			reg = <0x49>;
	//		interrupt-parent = <&intc>;
			interrupts = < 0 32 4 >;
		};

		adxl345@53 {
			status = "okay";
			compatible = "adi,adxl34x", "adxl34x";
			reg = <0x53>;
			interrupt-parent = <&intc>;
			interrupts = <0x0 31 0x4>;
		};
};

&clkc {
	ps-clk-frequency = <33333333>;
	fclk-enable = <0xf>;
};

&gem0 {
	status = "okay";
	phy-mode = "rgmii-id";
	phy-handle = <&ethernet_phy>;
	interrupt-parent = <&intc>;
	
	ethernet_phy: ethernet-phy@0 {
	//	compatible = "atheros,ar8035";
        device_type = "ethernet-phy";
        reg = <0>;
	};
};

&sdhci0 {
	status = "okay";
	broken-cd;
	wp-inverted;
};

&uart0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&usb0 {
	status = "okay";
	dr_mode = "host";
};

&can0 {
	status = "okay";
};

&amba {
	axivdma: axivdma@43000000 {
		compatible = "xlnx,axi-vdma-1.00.a";
		#address-cells = <0x1>;
		#size-cells = <0x1>;
		#dma-cells = <0x1>;
		#dma-channels = <0x1>;
		reg = <0x43000000 0x10000>;
		xlnx,num-fstores = <0x3>;
		interrupt-parent = <&intc>;

		dma-channel@43000000 {
			compatible = "xlnx,axi-vdma-mm2s-channel";
			interrupts = <0x0 0x3b 0x4>;
			xlnx,datawidth = <0x40>;
			xlnx,genlock-mode = <0x0>;
			xlnx,include-dre = <0x0>;
		};
	};

	hdmi_clock: axi-clkgen@43C00000 {
		compatible = "adi,axi-clkgen-2.00.a";
		reg = <0x43C00000 0x10000>;
		#clock-cells = <0x0>;
		clocks = <&clkc 0x10>;
	};

	axi-hdmi@43C10000 {
		compatible = "adi,axi-hdmi-tx-1.00.a";
		reg = <0x43C10000 0x10000>;
		encoder-slave = <&sii902x>;
		dmas = <&axivdma 0x0>;
		dma-names = "video";
		clocks = <&hdmi_clock>;
        adi,is-rgb;
		port {
			axi_hdmi_out: endpoint {
				remote-endpoint = <&adv7511_in>;
			};
		};
	};
};
